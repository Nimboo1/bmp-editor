char* nameCreate(char fileSymbol /*captcha[i]*/) +
{
 /* Создание названия картинки */
 
 char fileName[6];
 
 file_name[5]='\0';
 
 file_name[0]=fileSymbol;
 strcat(fileName,".bmp");
 
 return fileName;
}

file *openFile (char *fileName, char *openAction) + (скорее всего не нужна)
{
    /* Функция принимает строку, содержащую имя файла и строку наименования действия, производимого над файлом(чтение/запись);
    Создает указатель на файл;
    Открывает файл;
    Возвращает указатель на файл; */

    file *inputFile = fopen(fileName, openAction);

    return inputFile; /*FILE * file_input[10];*/
 }
 
bmp fileRead(file* inputeFile)  +
{
  /* Чтение "хедера" бмп */
  
  struct bmp bmpImage;
  
  		fread(bmpImage.type, 2, 1, inputeFile);
		fread(&bmpImage.size, 4, 1,inputeFile);
		fread(&bmpImage.reserved, 4, 1, finputeFile);
		fread(&bmpImage.head_end, 4, 1, inputeFile);
		fread(&bmpImage.header_size, 4, 1, inputeFile);
		fread(&bmpImage.weight, 4, 1, inputeFile);
		fread(&bmpImage.height, 4, 1, inputeFile);
		fread(bmpImage.end, 4, 7, inputeFile);
		
 return bmpImage; /*image[i]*/
}

void fileWrite (bmp bmpImage, int captchaSize, BYTE ***rastrCaptcha, BYTE padArray[][20], int *padding)  +
{	

	/*записывает результат в результирующий файл*/
	
	 FILE* outputFile = fopen("captcha.bmp","w");
	 
  	 fwrite(&bmpImage.type, 2, 1, outputFile);   
	 fwrite(&bmpImage.size, 4, 1, outputFile);
	 fwrite(&bmpImage.reserved, 4, 1, outputFile);
	 fwrite(&bmpImage.head_end, 4, 1, outputFile);
	 fwrite(&bmpImage.header_size, 4, 1, outputFile);
	 fwrite(&captchaWeight, 4, 1, outputFile);
	 fwrite(&bmpImage.height, 4, 1, outputFile);
	 fwrite(&image.end, 4, 7, outputFile);
	 for(i=0;i<bmpImage.height; i++)
	   {
		    for (j=0;j<bmpImage.weight*captchaSize; j++)
		    fwrite(rastrCaptcha[i][j], 3, 1, outputFile);
		    fwrite(padArray[0], padding[0], 1, outputFile);
	   }
	   
	 fclose(outputFile);
}


